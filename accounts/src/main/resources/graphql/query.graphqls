type Query {
    accounts: [BankAccountType]
    accountById (accountId : ID): BankAccountType
}

type Mutation{
   addAccount (account: BankAccountInput): Boolean
    deleteAccount (accountId : ID): Boolean
    editAccount(account: BankAccountInput): BankAccountType
}

type BankAccountType {
    accountId: ID
    client: ClientType
    currency: Currency
    balance: Float
    status: String
}

input BankAccountInput {
    accountId: ID
    clientId: Int
    currency: Currency
    balance: Float
    status: String
}

type ClientType {
    clientId: ID
    person: Person
}

type Person{
    personId: ID
    firstName: String
    middleName: String
    lastName: String
}

# Supported currencies
enum Currency {
    #Euro
    EUR,
    # Canadian Dollar
    CAD,
    # United States Dollar
    USD
}